 private fun esElementoArray():  ElementoArray? {
        return if (tokenActual.categoria == Categoria.CADENA_CARACTERES ||
                tokenActual.categoria == Categoria.CARACTER || tokenActual.categoria == Categoria.DECIMAL ||
                tokenActual.categoria == Categoria.ENTERO ||
            (tokenActual.categoria == Categoria.PALABRA_RESERVADA && (tokenActual.lexema == "TRUE" ||
                tokenActual.lexema == "FALSE"))) {
            ElementoArray(tokenActual.lexema)
        } else {
            null
        }
    }
   private fun sonElementosArray(): MutableList<ElementoArray> {
        var elementosArray: MutableList<ElementoArray> = ArrayList<ElementoArray>()
        var elem: ElementoArray? = esElementoArray()
        while (elem != null) {
            elementosArray.add(elem)
            obtenerSgteToken()
            if (tokenActual.categoria == Categoria.SEPARADOR) {
                obtenerSgteToken()
                elem = esElementoArray()
            } else if (tokenActual.categoria == Categoria.CORCHETE_DER) {
                break
            }
        }
        return elementosArray
    }

    private fun sonElementosArrayB(): MutableList<MutableList<ElementoArray>> {
        var elementosArray: MutableList<MutableList<ElementoArray>> = ArrayList<MutableList<ElementoArray>>()
        var elems: MutableList<ElementoArray> = sonElementosArray()
        while (elems != null) {
            elementosArray.add(elems)
            obtenerSgteToken()
            if (tokenActual.categoria == Categoria.SEPARADOR) {
                obtenerSgteToken()
                elems = sonElementosArray()
            } else {
                break
            }
        }
        return elementosArray
    }
    private fun esInicializacionArrayB(): InicializacionArrayB {
        var nombre = ""
        if (tokenActual.categoria == Categoria.IDENTIFICADOR) {
            nombre = tokenActual.lexema
            obtenerSgteToken()
            if (tokenActual.categoria == Categoria.OPERADOR_ASIGNACION) {
                obtenerSgteToken()
                if (tokenActual.categoria == Categoria.IDENTIFICADOR) {
                    var nombreAsig = tokenActual.lexema
                    obtenerSgteToken()
                    if (tokenActual.categoria == Categoria.TERMINAL) {
                        println("Inicializaci√≥n tipoArrayB exitosa")
                        return InicializacionArrayB(nombre, nombreAsig)
                    } else {
                        reportarError("Se esperaba fin de sentencia '|'")
                    }
                } else {
                    var invocacionFuncion = esInvocacionDeFuncion()
                    if (invocacionFuncion != null) {
                        obtenerSgteToken()
                        if (tokenActual.categoria == Categoria.TERMINAL) {
                            return InicializacionArrayB(nombre, invocacionFuncion)
                        } else {
                            reportarError("Se esperaba fin de sentencia '|'")
                        }
                    } else if (tokenActual.categoria == Categoria.CORCHETE_IZQ) {
                        obtenerSgteToken()
                        if (tokenActual.categoria == Categoria.CORCHETE_IZQ) {
                            var elementosArrayB = sonElementosArrayB()
                            if (tokenActual.categoria == Categoria.CORCHETE_DER) {
                                obtenerSgteToken()
                                if (tokenActual.categoria == Categoria.TERMINAL) {
                                    return InicializacionArrayB(nombre, elementosArrayB)
                                } else {
                                    reportarError("Se esperaba fin de sentencia '|'")
                                }
                            } else {
                                reportarError("Se esperaba corchete derecho ']'")
                            }
                        } else {
                            reportarError("Se esperaba corchete izquierdo '['")
                        }
                    }
                }
            }
        }
    }
}

 private fun esDeclaracionArrayB(): Sentencia? {
        var tipoVariable = ""
        var nombre = ""
        if (tokenActual.categoria == Categoria.PALABRA_RESERVADA && tokenActual.lexema == "CONST") {
            tipoVariable = "INMUTABLE"
            obtenerSgteToken()
            if (tokenActual.categoria == Categoria.IDENTIFICADOR) {
                nombre = tokenActual.lexema
                obtenerSgteToken()
                if (tokenActual.categoria == Categoria.DOS_PUNTOS) {
                    obtenerSgteToken()
                    val tipoDato = esTipoArrayB()
                    if (tipoDato != null) {
                        obtenerSgteToken()
                        if(tokenActual.categoria==Categoria.TERMINAL){
                            println("Declaracion tipoArrayB exitosa")
                            return DeclaracionArrayB( nombre, tipoVariable, tipoDato)
                        }else{
                            reportarError("Se esperaba fin de sentencia '|'")
                        }
                    } else {
                        reportarError("Falta tipo Dato o Array de variable")
                    }
                } else {
                    reportarError("Se esperaba ';'")
                }
            }
        } else if (tokenActual.categoria == Categoria.IDENTIFICADOR) {
            tipoVariable = "MUTABLE"
            nombre = tokenActual.lexema
            obtenerSgteToken()
            if (tokenActual.categoria == Categoria.DOS_PUNTOS) {
                obtenerSgteToken()
                val tipoDato = esTipoArrayB()
                if (tipoDato != null) {
                    obtenerSgteToken()
                    if(tokenActual.categoria==Categoria.TERMINAL){
                        println("Declaracion tipoArrayB exitosa")
                        return DeclaracionArrayB( nombre, tipoVariable, tipoDato)
                    }else{
                        reportarError("Se esperaba fin de sentencia '|'")
                    }
                } else {
                    reportarError("Falta tipo Dato o Array de variable")
                }
            } else {
                reportarError("Se esperaba ';'")
            }
        }
    }
